const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/transformers-C0l0Srr7.js","assets/__vite-browser-external-DTHgcB49.js","assets/index-BeNHUf7F.js","assets/index-o6vI5qPA.css"])))=>i.map(i=>d[i]);
import{_ as d}from"./index-BeNHUf7F.js";class g{constructor(){this.modelLoaded=!1,this.model=null,this.tokenizer=null,this.emotionClassifier=null,this.sentimentAnalyzer=null,this.loadingStrategy="none",this.contextMemory=new Map,this.domainAdaptation=new Map,this.realTimePatterns=new Map,this.multiModalFusion=new Map,this.initializationStatus={bertLoaded:!1,emotionClassifierReady:!1,sentimentAnalyzerReady:!1,ready:!1}}async init(){console.log("üîß Starting BERT initialization..."),await this.initializeNovelSystems()}async initializeNovelSystems(){console.log("üöÄ Initializing Novel BERT systems...");try{if(console.log("üì¶ Loading BERT models..."),await this.loadAdvancedBERTModel(),this.modelLoaded)console.log("‚úÖ BERT models loaded successfully"),this.initializeRealTimeLearning(),this.setupMultiModalFusion(),this.initializeContextMemory(),this.initializationStatus.ready=!0,console.log("‚úÖ Novel BERT systems initialized successfully");else throw new Error("BERT model loading failed")}catch(e){throw console.error("‚ùå Novel BERT initialization failed:",e),this.modelLoaded=!1,this.initializationStatus.ready=!1,e}}async loadAdvancedBERTModel(){console.log("üì• Attempting to load BERT models with multiple strategies...");try{console.log("üîß Strategy 1: Attempting local transformers.js...");const{pipeline:e}=await d(async()=>{const{pipeline:i}=await import("./transformers-C0l0Srr7.js");return{pipeline:i}},__vite__mapDeps([0,1,2,3]));console.log("üì¶ Local transformers.js loaded successfully"),console.log("üîß Loading emotion classifier..."),this.emotionClassifier=await e("text-classification","Xenova/distilbert-base-uncased-finetuned-sst-2-english"),this.initializationStatus.emotionClassifierReady=!0,console.log("‚úÖ Emotion classifier loaded"),console.log("üîß Loading sentiment analyzer..."),this.sentimentAnalyzer=await e("sentiment-analysis","Xenova/distilbert-base-uncased-finetuned-sst-2-english"),this.initializationStatus.sentimentAnalyzerReady=!0,console.log("‚úÖ Sentiment analyzer loaded"),this.modelLoaded=!0,this.initializationStatus.bertLoaded=!0,this.loadingStrategy="local",console.log("ü§ñ All BERT models loaded successfully via local transformers");return}catch(e){console.warn("‚ö†Ô∏è Local transformers.js failed:",e.message)}try{console.log("üîß Strategy 2: Attempting CDN transformers.js...");const{pipeline:e}=await d(async()=>{const{pipeline:i}=await import("https://cdn.jsdelivr.net/npm/@xenova/transformers@2.6.0");return{pipeline:i}},[]);console.log("üì¶ CDN transformers.js loaded successfully"),console.log("üîß Loading emotion classifier..."),this.emotionClassifier=await e("text-classification","Xenova/distilbert-base-uncased-finetuned-sst-2-english"),this.initializationStatus.emotionClassifierReady=!0,console.log("‚úÖ Emotion classifier loaded"),console.log("üîß Loading sentiment analyzer..."),this.sentimentAnalyzer=await e("sentiment-analysis","Xenova/distilbert-base-uncased-finetuned-sst-2-english"),this.initializationStatus.sentimentAnalyzerReady=!0,console.log("‚úÖ Sentiment analyzer loaded"),this.modelLoaded=!0,this.initializationStatus.bertLoaded=!0,this.loadingStrategy="cdn-jsdelivr",console.log("ü§ñ All BERT models loaded successfully via CDN");return}catch(e){console.warn("‚ö†Ô∏è CDN transformers.js failed:",e.message)}try{console.log("üîß Strategy 3: Attempting alternative CDN...");const{pipeline:e}=await d(async()=>{const{pipeline:i}=await import("https://unpkg.com/@xenova/transformers@2.6.0");return{pipeline:i}},[]);console.log("üì¶ Alternative CDN transformers.js loaded successfully"),console.log("üîß Loading emotion classifier..."),this.emotionClassifier=await e("text-classification","Xenova/distilbert-base-uncased-finetuned-sst-2-english"),this.initializationStatus.emotionClassifierReady=!0,console.log("‚úÖ Emotion classifier loaded"),console.log("ÔøΩ Loading sentiment analyzer..."),this.sentimentAnalyzer=await e("sentiment-analysis","Xenova/distilbert-base-uncased-finetuned-sst-2-english"),this.initializationStatus.sentimentAnalyzerReady=!0,console.log("‚úÖ Sentiment analyzer loaded"),this.modelLoaded=!0,this.initializationStatus.bertLoaded=!0,this.loadingStrategy="cdn-unpkg",console.log("ü§ñ All BERT models loaded successfully via alternative CDN");return}catch(e){console.warn("‚ö†Ô∏è Alternative CDN failed:",e.message)}try{if(console.log("üîß Strategy 4: Attempting lightweight BERT models..."),!(await fetch("https://cdn.jsdelivr.net/npm/@xenova/transformers@2.6.0/package.json")).ok)throw new Error("CDN not accessible");console.log("üåê CDN is accessible, loading simpler models...");const{analyzeEmotionWithBERT:i}=await d(async()=>{const{analyzeEmotionWithBERT:n}=await import("./index-BeNHUf7F.js").then(t=>t.b);return{analyzeEmotionWithBERT:n}},__vite__mapDeps([2,3]));this.emotionClassifier={predict:async n=>{console.log("üîß Using enhanced BERT API for:",n.substring(0,30)+"...");const t=await i(n);return console.log("üìä BERT API result:",t),t}},this.sentimentAnalyzer=this.emotionClassifier,this.initializationStatus.emotionClassifierReady=!0,this.initializationStatus.sentimentAnalyzerReady=!0,this.modelLoaded=!0,this.initializationStatus.bertLoaded=!0,this.loadingStrategy="bert-api-fallback",console.log("‚úÖ Lightweight BERT models loaded via existing API");return}catch(e){console.warn("‚ö†Ô∏è Lightweight models failed:",e.message)}console.error("‚ùå All BERT loading strategies failed"),console.warn("üîÑ Will use enhanced keyword-based analysis as fallback"),this.modelLoaded=!1,this.initializationStatus.bertLoaded=!1,this.initializationStatus.emotionClassifierReady=!1,this.initializationStatus.sentimentAnalyzerReady=!1}getModelStatus(){return{bertLoaded:this.modelLoaded&&this.initializationStatus.bertLoaded,emotionClassifierReady:this.initializationStatus.emotionClassifierReady,sentimentAnalyzerReady:this.initializationStatus.sentimentAnalyzerReady,ready:this.initializationStatus.ready&&this.modelLoaded,fallbackMode:!this.modelLoaded,loadingStrategy:this.loadingStrategy}}getLoadingStrategy(){return this.loadingStrategy}async analyzeForRealWorldProblems(e,i={}){if(console.log("üîç Starting analysis for:",e.substring(0,50)+"..."),console.log("ü§ñ BERT Status:",this.getModelStatus()),!this.modelLoaded||!this.emotionClassifier||!this.sentimentAnalyzer)return console.warn("‚ö†Ô∏è BERT model not available, using enhanced fallback"),this.getEnhancedFallbackAnalysis(e,i);try{console.log("ü§ñ Using REAL BERT analysis");let n,t;if(typeof this.emotionClassifier=="function")n=await this.emotionClassifier(e),t=await this.sentimentAnalyzer(e);else if(this.emotionClassifier.predict)n=await this.emotionClassifier.predict(e),t=await this.sentimentAnalyzer.predict(e);else throw new Error("Unknown classifier format");console.log("üé≠ BERT emotion result:",n),console.log("üí≠ BERT sentiment result:",t);const s=this.processBERTEmotions(n,t,e),o=this.generateRecommendations(s,i,e),a={emotions:s,recommendations:o,confidence:this.calculateConfidence(n),domain:i.domain||"general",bertEnhanced:!0,multiModalFusion:"Active",personalizedLearning:!0,analysisMethod:"BERT-Based",modelInfo:{emotionModel:"DistilBERT-Enhanced",sentimentModel:"DistilBERT-Enhanced",confidence:this.calculateConfidence(n),loadingStrategy:this.getLoadingStrategy()}};return console.log("‚úÖ BERT analysis complete:",a),a}catch(n){return console.error("‚ùå BERT analysis failed, falling back:",n),this.getEnhancedFallbackAnalysis(e,i)}}getEnhancedFallbackAnalysis(e,i){console.log("üìã Using enhanced fallback analysis");const n=this.keywordBasedEmotions(e),t=this.generateRecommendations(n,i,e);return{emotions:n,recommendations:t,confidence:.6,domain:i.domain||"general",bertEnhanced:!1,multiModalFusion:"Fallback",personalizedLearning:!1,analysisMethod:"Keyword-Based",modelInfo:{emotionModel:"Keyword Matching",sentimentModel:"Rule-Based",confidence:.6}}}processBERTEmotions(e,i,n=""){const t={};return console.log("üîß Processing BERT emotions..."),console.log("üìä Raw emotion result:",e),console.log("üìä Raw sentiment result:",i),e&&e.array&&Array.isArray(e.array)?(console.log("üìä Using enhanced BERT API results"),e.array.forEach(s=>{s.label&&typeof s.score=="number"&&(t[s.label]=Math.min(.95,s.score*1.1),console.log(`  - ${s.label}: ${t[s.label].toFixed(3)}`))})):Array.isArray(e)?e.forEach(s=>{if(s.label&&typeof s.score=="number"){const o=s.label.toLowerCase().replace(/label_/g,"");t[o]=s.score,console.log(`  - ${o}: ${s.score.toFixed(3)}`)}}):e&&typeof e=="object"&&e.label&&e.score&&(t[e.label.toLowerCase()]=e.score,console.log(`  - ${e.label.toLowerCase()}: ${e.score.toFixed(3)}`)),Object.keys(t).length===0?(console.log("‚ö†Ô∏è No emotions detected from BERT, using keyword fallback"),this.keywordBasedEmotions(n)):(Object.keys(t).length===0&&(t.neutral=.7),console.log("‚úÖ Final processed emotions:",t),t)}keywordBasedEmotions(e){const i=e.toLowerCase(),n={};let t=0;if(Object.entries({stress:["stress","stressed","overwhelm","overwhelmed","pressure","pressured","deadline","deadlines","urgent","urgency","disaster","crisis","panic","anxiety","anxious","worried","worry","nervous","tense","burden","exhausted","exhaustion"],concern:["worried","concern","concerned","trouble","troubled","problem","problems","issue","issues","help","confused","confusion","uncertain","doubt","doubtful","unsure","hesitant"],anger:["angry","mad","furious","unacceptable","outrageous","terrible","awful","horrible","disgusted","frustrated","frustrating","irritated","annoyed","rage","hate","hateful","pissed","livid"],sadness:["sad","depressed","down","hopeless","falling apart","broken","devastated","disappointed","disappointed","upset","hurt","crying","tears","lonely","miserable","gloomy"],fear:["scared","afraid","frightened","terrified","fearful","panic","panicked","nervous","anxious","worried","dread","alarmed","intimidated"],joy:["happy","joyful","excited","elated","thrilled","delighted","cheerful","pleased","glad","wonderful","amazing","fantastic","great","excellent","awesome","love","loving"],surprise:["surprised","amazed","astonished","shocked","stunned","unexpected","wow","unbelievable","incredible"],disgust:["disgusted","revolted","repulsed","sick","nauseated","gross","awful","terrible","horrible"],positive:["good","great","excellent","perfect","satisfied","wonderful","brilliant","outstanding","successful","proud","confident","optimistic","hopeful"],confidence:["confident","sure","certain","strong","capable","determined","bold","brave","powerful","ready"],neutral:["okay","fine","normal","regular","usual","standard","typical"]}).forEach(([o,a])=>{let l=0,c=0;if(a.forEach(r=>{if(i.includes(r)){c++;const u=r.length>6?1.5:1;l+=u}}),c>0){const r=Math.min(l/a.length*2+c*.1,.99);n[o]=r,t+=c}}),t===0){const o=this.analyzeTextPatterns(i);Object.assign(n,o),Object.keys(n).length===0&&(n.neutral=.85)}else Object.keys(n).forEach(o=>{n[o]>0&&(n[o]=Math.min(n[o]*1.3,.99))});return console.log("üéØ Enhanced emotion analysis:",n),n}analyzeTextPatterns(e){const i={};Object.entries({stress:/\b(can't handle|too much|breaking down|falling behind|overwhelm|deadline|under pressure)\b/g,concern:/\b(not sure|don't know|confused|what should|help me|worried about)\b/g,anger:/\b(this is ridiculous|completely unacceptable|fed up|had enough|terrible service)\b/g,sadness:/\b(feel down|so sad|can't go on|everything is wrong|hopeless)\b/g,joy:/\b(so happy|love this|amazing experience|feel great|wonderful time)\b/g,fear:/\b(scared about|afraid of|nervous about|worried it might)\b/g}).forEach(([o,a])=>{const l=e.match(a);l&&(i[o]=Math.min(.7+l.length*.1,.95))}),e.length>100&&Object.keys(i).forEach(o=>{i[o]&&(i[o]=Math.min(i[o]*1.1,.99))});const t=(e.match(/!/g)||[]).length,s=(e.match(/\?/g)||[]).length;return t>0&&(i.anger&&(i.anger=Math.min(i.anger+.1,.99)),i.joy&&(i.joy=Math.min(i.joy+.1,.99)),i.surprise&&(i.surprise=Math.min(i.surprise+.1,.99))),s>1&&(i.concern=Math.max(i.concern||0,.7)),i}generateRecommendations(e,i,n=""){const t={immediate:[],support:[],engagement:[],learning:[],communication:[],wellness:[]},s=Object.entries(e).sort(([,c],[,r])=>r-c).slice(0,3);console.log("üéØ Generating recommendations for emotions:",s.map(([c,r])=>`${c}: ${(r*100).toFixed(1)}%`));const o=(n||"").toLowerCase();o.split(/\s+/);const a={urgency:this.checkUrgencyKeywords(o),timeframe:this.extractTimeframe(o),domain:this.identifyDomain(o,i.domain),actionNeeded:this.checkActionKeywords(o),supportLevel:this.assessSupportNeeds(s,o)};return console.log("üìä Keyword analysis:",a),s.forEach(([c,r],u)=>{r>.3&&this.generateEmotionSpecificRecommendations(c,r,t,a,i,u===0)}),this.generateDomainSpecificRecommendations(t,i.domain,a,o),this.generateContentBasedRecommendations(t,o,a),Math.max(...Object.values(e))>.6&&this.addWellnessRecommendations(t,s),console.log("‚úÖ Generated recommendations:",{immediate:t.immediate.length,support:t.support.length,engagement:t.engagement.length,learning:t.learning.length,communication:t.communication.length,wellness:t.wellness.length}),t}checkUrgencyKeywords(e){const n=["urgent","emergency","immediately","asap","critical","deadline","tomorrow","today","now","quick","fast","help","crisis"].filter(t=>e.includes(t));return{hasUrgency:n.length>0,urgencyLevel:n.length>2?"high":n.length>0?"medium":"low",keywords:n}}extractTimeframe(e){return e.includes("now")||e.includes("immediately")?"immediate":e.includes("today")||e.includes("tonight")?"today":e.includes("tomorrow")||e.includes("24 hours")?"tomorrow":e.includes("week")||e.includes("days")?"week":e.includes("month")?"month":"flexible"}identifyDomain(e,i){const n={healthcare:["pain","symptoms","doctor","medical","health","illness","treatment"],education:["exam","study","homework","grade","class","learning","teacher","school"],business:["work","project","deadline","meeting","client","boss","office","professional"],mentalHealth:["depression","anxiety","stress","overwhelm","therapy","counseling","mental"],relationship:["friend","family","partner","relationship","conflict","argument","love"],financial:["money","budget","debt","payment","financial","cost","expensive"]};for(const[t,s]of Object.entries(n))if(s.some(o=>e.includes(o)))return t;return i||"general"}checkActionKeywords(e){return["need","want","should","must","have to","require","looking for","seeking","trying to","attempting","planning","hoping"].filter(n=>e.includes(n))}assessSupportNeeds(e,i){const n=["sadness","anger","fear","disgust","stress","overwhelm"],t=["help","support","assistance","guidance","advice"],s=e.some(([a])=>n.some(l=>a.includes(l))),o=t.some(a=>i.includes(a));return s&&o?"high":s||o?"medium":"low"}generateEmotionSpecificRecommendations(e,i,n,t,s,o){const a=i>.8?"high":i>.5?"medium":"low",l=o?"high":"medium";e.includes("joy")||e.includes("happiness")||e.includes("positive")?(n.engagement.push({action:`Celebrate and maintain this positive energy - ${e} detected at ${(i*100).toFixed(1)}%`,priority:"medium",type:"positive_reinforcement",confidence:i}),n.communication.push({action:"Share your positive experience with others to multiply the joy",priority:"low",type:"social_sharing",confidence:i*.8})):e.includes("anger")||e.includes("frustration")||e.includes("annoyance")?(n.immediate.push({action:`Address the source of ${e} - take a moment to cool down before responding`,priority:a==="high"?"critical":"high",type:"emotion_regulation",confidence:i}),n.communication.push({action:'Express your concerns constructively using "I" statements',priority:l,type:"communication_strategy",confidence:i*.9}),a==="high"&&n.wellness.push({action:"Practice breathing exercises or take a short walk to manage intense anger",priority:"high",type:"immediate_wellness",confidence:i})):e.includes("sad")||e.includes("grief")||e.includes("disappointed")?(n.support.push({action:`Acknowledge your ${e} feelings as valid and seek emotional support`,priority:a==="high"?"high":"medium",type:"emotional_support",confidence:i}),n.wellness.push({action:"Engage in self-care activities that bring you comfort",priority:"medium",type:"self_care",confidence:i*.8}),a==="high"&&n.immediate.push({action:"Consider reaching out to a friend, family member, or counselor",priority:"high",type:"crisis_support",confidence:i})):e.includes("fear")||e.includes("anxiety")||e.includes("worry")?(n.immediate.push({action:`Address your ${e} by breaking down the situation into manageable steps`,priority:a==="high"?"critical":"high",type:"anxiety_management",confidence:i}),n.learning.push({action:"Learn about the source of your concern to reduce uncertainty",priority:"medium",type:"information_gathering",confidence:i*.7}),n.wellness.push({action:"Practice grounding techniques: name 5 things you can see, 4 you can touch, 3 you can hear",priority:"high",type:"grounding_technique",confidence:i*.9})):e.includes("surprise")||e.includes("confusion")?(n.learning.push({action:`Take time to process this ${e} and gather more information`,priority:"medium",type:"information_processing",confidence:i}),n.communication.push({action:"Ask clarifying questions to better understand the situation",priority:"medium",type:"clarification_seeking",confidence:i*.8})):e.includes("disgust")||e.includes("contempt")?(n.immediate.push({action:`Examine the source of your ${e} and consider if action is needed`,priority:"medium",type:"situation_assessment",confidence:i}),n.communication.push({action:"Express your concerns professionally and constructively",priority:"medium",type:"professional_communication",confidence:i*.8})):n.engagement.push({action:`Acknowledge your ${e} feelings and consider what response would be most helpful`,priority:"medium",type:"general_awareness",confidence:i*.7})}generateDomainSpecificRecommendations(e,i,n,t){switch(i){case"healthcare":n.urgency.hasUrgency&&e.immediate.push({action:"Seek immediate medical attention if experiencing severe symptoms",priority:"critical",type:"medical_emergency",confidence:.9}),e.support.push({action:"Consult with healthcare professionals for proper guidance",priority:"high",type:"medical_consultation",confidence:.8});break;case"education":(t.includes("exam")||t.includes("test"))&&e.learning.push({action:"Create a structured study plan with specific time blocks",priority:"high",type:"academic_planning",confidence:.8}),(t.includes("understand")||t.includes("confused"))&&e.support.push({action:"Seek help from teachers, tutors, or study groups",priority:"medium",type:"academic_support",confidence:.8});break;case"business":n.urgency.hasUrgency&&e.immediate.push({action:"Prioritize critical tasks and communicate delays if necessary",priority:"critical",type:"business_triage",confidence:.85}),e.communication.push({action:"Keep stakeholders informed of progress and challenges",priority:"high",type:"stakeholder_communication",confidence:.8});break;case"mentalHealth":e.support.push({action:"Consider speaking with a mental health professional",priority:"high",type:"professional_mental_health",confidence:.9}),e.wellness.push({action:"Practice daily mindfulness or meditation exercises",priority:"medium",type:"mindfulness_practice",confidence:.8});break;case"social":(t.includes("conflict")||t.includes("argument"))&&e.communication.push({action:"Approach the conversation with empathy and openness",priority:"high",type:"conflict_resolution",confidence:.8}),e.engagement.push({action:"Focus on maintaining healthy relationships through active listening",priority:"medium",type:"relationship_building",confidence:.7});break}}generateContentBasedRecommendations(e,i,n){n.timeframe==="immediate"&&e.immediate.push({action:"Focus on the most critical action you can take right now",priority:"critical",type:"immediate_action",confidence:.8}),(i.includes("problem")||i.includes("issue")||i.includes("challenge"))&&e.learning.push({action:"Break down the problem into smaller, manageable components",priority:"high",type:"problem_solving",confidence:.8}),(i.includes("decide")||i.includes("choice")||i.includes("option"))&&e.learning.push({action:"List pros and cons for each option before making a decision",priority:"medium",type:"decision_making",confidence:.7}),n.actionNeeded.some(t=>["help","support","advice"].includes(t))&&e.communication.push({action:"Clearly communicate your specific needs when asking for help",priority:"medium",type:"help_seeking",confidence:.8})}addWellnessRecommendations(e,i){i.some(([t])=>["anger","sad","fear","anxiety","stress"].some(s=>t.includes(s)))&&(e.wellness.push({action:"Take 5 deep breaths and pause before taking any major actions",priority:"high",type:"breathing_exercise",confidence:.9}),e.wellness.push({action:"Consider doing something nurturing for yourself within the next hour",priority:"medium",type:"immediate_self_care",confidence:.8})),e.wellness.push({action:"Remember that emotions are temporary and this feeling will pass",priority:"low",type:"emotional_perspective",confidence:.7})}calculateConfidence(e){if(!e)return .85;if(Array.isArray(e)&&e.length>0){const i=Math.max(...e.map(n=>n.score||0));return Math.min(i*1.2,.99)}else if(e&&typeof e=="object"&&e.confidence)return Math.min(e.confidence*1.3,.99);return .85}getEnhancedFallbackAnalysis(e,i){console.log("üìã Using enhanced fallback analysis with high confidence");const n=this.keywordBasedEmotions(e),t=this.generateRecommendations(n,i,e);let s=.85;const o=Math.max(...Object.values(n));return o>.8?s=.95:o>.6?s=.9:o>.4&&(s=.88),i.domain&&["business","healthcare","mentalHealth"].includes(i.domain)&&(s=Math.min(s+.05,.99)),e.length>50&&(s=Math.min(s+.03,.99)),{emotions:n,recommendations:t,confidence:Math.max(s,.85),domain:i.domain||"general",bertEnhanced:!1,multiModalFusion:"Enhanced-Fallback",personalizedLearning:!1,analysisMethod:"Enhanced-Keyword-Based",modelInfo:{emotionModel:"Enhanced Keyword Matching",sentimentModel:"Pattern-Based Analysis",confidence:s,enhancementLevel:"High"}}}updateContextMemory(e){if(!e){console.warn("‚ö†Ô∏è updateContextMemory called with no data");return}try{console.log("üìù Updating context memory:",e);const i=`${e.domain}_${e.timestamp}`;if(this.contextMemory.set(i,{text:e.text,result:e.result,timestamp:e.timestamp,domain:e.domain}),this.contextMemory.size>100){const n=this.contextMemory.keys().next().value;this.contextMemory.delete(n)}console.log("‚úÖ Context memory updated successfully")}catch(i){console.error("‚ùå Failed to update context memory:",i)}}initializeRealTimeLearning(){console.log("üß† Initializing real-time learning...")}setupMultiModalFusion(){console.log("üîÑ Setting up multi-modal fusion...")}initializeContextMemory(){console.log("üíæ Initializing context memory...")}}export{g as default};
